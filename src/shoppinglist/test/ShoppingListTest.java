package shoppinglist.test;
// Generated by ComTest BEGIN
import shoppinglist.SailoException;
import java.io.File;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import shoppinglist.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.04.25 23:01:05 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class ShoppingListTest {


  // Generated by ComTest BEGIN  // ShoppingList: 20
   private ShoppingList shoppinglist; 
   private Liike citymarket; 
   private Liike prisma; 
   private int lid1; 
   private int lid2; 
   private Tuote oivariini; 
   private Tuote patonki; 
   private Tuote korppu; 
   private Tuote maito; 
   private Tuote lapio; 


   public void alustaShoppingList() {
     shoppinglist = new ShoppingList(); 
     citymarket = new Liike(); citymarket.tayta("Citymarket"); citymarket.rekisteroi(); 
     prisma = new Liike(); prisma.tayta("Prisma"); prisma.rekisteroi(); 
     lid1 = citymarket.getTunnusNro(); 
     lid2 = prisma.getTunnusNro(); 
     oivariini = new Tuote(); oivariini.tayta(lid2); 
     patonki = new Tuote(); patonki.tayta(lid1); 
     korppu = new Tuote(); korppu.tayta(lid2); 
     maito = new Tuote(); maito.tayta(lid1); 
     lapio = new Tuote(); lapio.tayta(lid2); 
     try {
     shoppinglist.lisaa(citymarket); 
     shoppinglist.lisaa(prisma); 
     shoppinglist.lisaa(oivariini); 
     shoppinglist.lisaa(patonki); 
     shoppinglist.lisaa(korppu); 
     shoppinglist.lisaa(maito); 
     shoppinglist.lisaa(lapio); 
     } catch ( Exception e) {
        System.err.println(e.getMessage()); 
     }
   }
  // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta69 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta69() throws SailoException {    // ShoppingList: 69
    Liikkeet liikkeet = new Liikkeet(); 
    Liike liike1 = new Liike(), liike2 = new Liike(); 
    liike1.tayta("1"); 
    liike2.tayta("2"); 
    String hakemisto = "testiliikkeet"; 
    String tiedNimi = hakemisto+"/nimet"; 
    File ftied = new File(tiedNimi+".dat"); 
    File dir = new File(hakemisto); 
    dir.mkdir(); 
    ftied.delete(); 
    try {
    liikkeet.lueTied(tiedNimi); 
    fail("ShoppingList: 83 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    liikkeet.lisaa(liike1); 
    liikkeet.lisaa(liike2); 
    liikkeet.tallenna("Liikkeet"); 
    liikkeet = new Liikkeet();  // Poistetaan vanhat luomalla uusi
    liikkeet.lueTied("Liikkeet");  // johon ladataan tiedot tiedostosta.
    liikkeet.lisaa(liike1); 
    liikkeet.tallenna("Liikkeet"); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLisaa129 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa129() throws SailoException {    // ShoppingList: 129
    alustaShoppingList(); 
    assertEquals("From: ShoppingList line: 132", 2, shoppinglist.etsi("*").size()); 
    shoppinglist.lisaa(citymarket); 
    assertEquals("From: ShoppingList line: 134", 3, shoppinglist.etsi("*").size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaTuotteet171 */
  @Test
  public void testAnnaTuotteet171() {    // ShoppingList: 171
    alustaShoppingList(); 
    Liike tokmanni = new Liike(); 
    tokmanni.rekisteroi(); 
    try {
    shoppinglist.lisaa(tokmanni); 
    } catch (SailoException e) {
    e.printStackTrace(); 
    }
    List<Tuote> loytyneet; 
    loytyneet = shoppinglist.annaTuotteet(tokmanni); 
    assertEquals("From: ShoppingList line: 184", 0, loytyneet.size()); 
    loytyneet = shoppinglist.annaTuotteet(citymarket); 
    assertEquals("From: ShoppingList line: 186", 2, loytyneet.size()); 
    assertEquals("From: ShoppingList line: 187", true, loytyneet.get(0) == patonki); 
    assertEquals("From: ShoppingList line: 188", true, loytyneet.get(1) == maito); 
    loytyneet = shoppinglist.annaTuotteet(prisma); 
    assertEquals("From: ShoppingList line: 190", 3, loytyneet.size()); 
    assertEquals("From: ShoppingList line: 191", true, loytyneet.get(0) == oivariini); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsi219 
   * @throws CloneNotSupportedException when error
   * @throws SailoException when error
   */
  @Test
  public void testEtsi219() throws CloneNotSupportedException, SailoException {    // ShoppingList: 219
    alustaShoppingList(); 
    Liike liike3 = new Liike(); liike3.rekisteroi(); 
    shoppinglist.lisaa(liike3); 
    Collection<Liike> loytyneet = shoppinglist.etsi("*citymarket*"); 
    assertEquals("From: ShoppingList line: 225", 1, loytyneet.size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoistaLiike277 
   * @throws Exception when error
   */
  @Test
  public void testPoistaLiike277() throws Exception {    // ShoppingList: 277
    alustaShoppingList(); 
    assertEquals("From: ShoppingList line: 280", 2, shoppinglist.etsi("*").size()); 
    assertEquals("From: ShoppingList line: 281", 2, shoppinglist.annaTuotteet(citymarket).size()); 
    assertEquals("From: ShoppingList line: 282", 1, shoppinglist.poistaLiike(citymarket)); 
    assertEquals("From: ShoppingList line: 283", 1, shoppinglist.etsi("*").size()); 
    assertEquals("From: ShoppingList line: 284", 0, shoppinglist.annaTuotteet(citymarket).size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoistaTuote298 
   * @throws Exception when error
   */
  @Test
  public void testPoistaTuote298() throws Exception {    // ShoppingList: 298
    alustaShoppingList(); 
    assertEquals("From: ShoppingList line: 301", 2, shoppinglist.annaTuotteet(citymarket).size()); 
    shoppinglist.poistaTuote(patonki); 
    assertEquals("From: ShoppingList line: 303", 1, shoppinglist.annaTuotteet(citymarket).size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa326 
   * @throws SailoException when error
   */
  @Test
  public void testKorvaaTaiLisaa326() throws SailoException {    // ShoppingList: 326
    alustaShoppingList(); 
    assertEquals("From: ShoppingList line: 329", 2, shoppinglist.etsi("*").size()); 
    shoppinglist.korvaaTaiLisaa(citymarket); 
    assertEquals("From: ShoppingList line: 331", 2, shoppinglist.etsi("*").size()); 
  } // Generated by ComTest END
}