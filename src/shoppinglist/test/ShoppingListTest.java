package shoppinglist.test;
// Generated by ComTest BEGIN
import shoppinglist.SailoException;
import java.io.File;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import shoppinglist.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.04.27 10:41:49 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class ShoppingListTest {


  // Generated by ComTest BEGIN  // ShoppingList: 20
   private ShoppingList shoppinglist; 
   private Liike citymarket; 
   private Liike prisma; 
   private int lid1; 
   private int lid2; 
   private Tuote oivariini; 
   private Tuote patonki; 
   private Tuote korppu; 
   private Tuote maito; 
   private Tuote lapio; 


   public void alustaShoppingList() {
     shoppinglist = new ShoppingList(); 
     citymarket = new Liike(); citymarket.tayta("Citymarket"); citymarket.rekisteroi(); 
     prisma = new Liike(); prisma.tayta("Prisma"); prisma.rekisteroi(); 
     lid1 = citymarket.getTunnusNro(); 
     lid2 = prisma.getTunnusNro(); 
     oivariini = new Tuote(); oivariini.tayta(lid2); 
     patonki = new Tuote(); patonki.tayta(lid1); 
     korppu = new Tuote(); korppu.tayta(lid2); 
     maito = new Tuote(); maito.tayta(lid1); 
     lapio = new Tuote(); lapio.tayta(lid2); 
     try {
     shoppinglist.lisaa(citymarket); 
     shoppinglist.lisaa(prisma); 
     shoppinglist.lisaa(oivariini); 
     shoppinglist.lisaa(patonki); 
     shoppinglist.lisaa(korppu); 
     shoppinglist.lisaa(maito); 
     shoppinglist.lisaa(lapio); 
     } catch ( Exception e) {
        System.err.println(e.getMessage()); 
     }
   }
  // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta65 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta65() throws SailoException {    // ShoppingList: 65
    ShoppingList shopping = new ShoppingList(); 
    Tuote limsa = new Tuote(); 
    Tuote jugurtti = new Tuote(); 
    Tuote sokeri = new Tuote(); 
    Liike liike1 = new Liike(), liike2 = new Liike(); 
    liike1.tayta("1"); 
    liike1.rekisteroi(); 
    liike2.tayta("2"); 
    liike2.rekisteroi(); 
    jugurtti.tayta(liike1.getTunnusNro()); 
    limsa.tayta(liike2.getTunnusNro()); 
    sokeri.tayta(liike1.getTunnusNro()); 
    String hakemisto = "testiliikkeet"; 
    String tiedNimi = hakemisto+"/nimet"; 
    File ftied = new File(tiedNimi+".dat"); 
    File dir = new File(hakemisto); 
    dir.mkdir(); 
    ftied.delete(); 
    shopping.lisaa(liike1); 
    shopping.lisaa(liike2); 
    shopping.lisaa(jugurtti); 
    shopping.lisaa(sokeri); 
    shopping.lisaa(limsa); 
    shopping.tallenna(); 
    shopping = new ShoppingList();  // Poistetaan vanhat luomalla uusi
    shopping.lueTiedostosta(); 
    assertEquals("From: ShoppingList line: 95", 2, shopping.getLiikkeet());
    List<Tuote> loytyneet = shopping.annaTuotteet(liike1); 
    Iterator<Tuote> ih = loytyneet.iterator(); 
    assertEquals("From: ShoppingList line: 98", true, ih.hasNext()); 
    ih.next(); 
    assertEquals("From: ShoppingList line: 100", true, ih.hasNext()); 
    ih.next(); 
    assertEquals("From: ShoppingList line: 102", false, ih.hasNext()); 
    loytyneet = shopping.annaTuotteet(liike2); 
    ih = loytyneet.iterator(); 
    assertEquals("From: ShoppingList line: 105", true, ih.hasNext()); 
    ih.next(); 
    assertEquals("From: ShoppingList line: 107", false, ih.hasNext()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLisaa146 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa146() throws SailoException {    // ShoppingList: 146
    alustaShoppingList(); 
    assertEquals("From: ShoppingList line: 149", 2, shoppinglist.etsi("*").size()); 
    shoppinglist.lisaa(citymarket); 
    assertEquals("From: ShoppingList line: 151", 3, shoppinglist.etsi("*").size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaTuotteet188 */
  @Test
  public void testAnnaTuotteet188() {    // ShoppingList: 188
    alustaShoppingList(); 
    Liike tokmanni = new Liike(); 
    tokmanni.rekisteroi(); 
    try {
    shoppinglist.lisaa(tokmanni); 
    } catch (SailoException e) {
    e.printStackTrace(); 
    }
    List<Tuote> loytyneet; 
    loytyneet = shoppinglist.annaTuotteet(tokmanni); 
    assertEquals("From: ShoppingList line: 201", 0, loytyneet.size()); 
    loytyneet = shoppinglist.annaTuotteet(citymarket); 
    assertEquals("From: ShoppingList line: 203", 2, loytyneet.size()); 
    assertEquals("From: ShoppingList line: 204", true, loytyneet.get(0) == patonki); 
    assertEquals("From: ShoppingList line: 205", true, loytyneet.get(1) == maito); 
    loytyneet = shoppinglist.annaTuotteet(prisma); 
    assertEquals("From: ShoppingList line: 207", 3, loytyneet.size()); 
    assertEquals("From: ShoppingList line: 208", true, loytyneet.get(0) == oivariini); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsi236 
   * @throws CloneNotSupportedException when error
   * @throws SailoException when error
   */
  @Test
  public void testEtsi236() throws CloneNotSupportedException, SailoException {    // ShoppingList: 236
    alustaShoppingList(); 
    Liike liike3 = new Liike(); liike3.rekisteroi(); 
    shoppinglist.lisaa(liike3); 
    Collection<Liike> loytyneet = shoppinglist.etsi("*citymarket*"); 
    assertEquals("From: ShoppingList line: 242", 1, loytyneet.size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoistaLiike294 
   * @throws Exception when error
   */
  @Test
  public void testPoistaLiike294() throws Exception {    // ShoppingList: 294
    alustaShoppingList(); 
    assertEquals("From: ShoppingList line: 297", 2, shoppinglist.etsi("*").size()); 
    assertEquals("From: ShoppingList line: 298", 2, shoppinglist.annaTuotteet(citymarket).size()); 
    assertEquals("From: ShoppingList line: 299", 1, shoppinglist.poistaLiike(citymarket)); 
    assertEquals("From: ShoppingList line: 300", 1, shoppinglist.etsi("*").size()); 
    assertEquals("From: ShoppingList line: 301", 0, shoppinglist.annaTuotteet(citymarket).size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoistaTuote315 
   * @throws Exception when error
   */
  @Test
  public void testPoistaTuote315() throws Exception {    // ShoppingList: 315
    alustaShoppingList(); 
    assertEquals("From: ShoppingList line: 318", 2, shoppinglist.annaTuotteet(citymarket).size()); 
    shoppinglist.poistaTuote(patonki); 
    assertEquals("From: ShoppingList line: 320", 1, shoppinglist.annaTuotteet(citymarket).size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa343 
   * @throws SailoException when error
   */
  @Test
  public void testKorvaaTaiLisaa343() throws SailoException {    // ShoppingList: 343
    alustaShoppingList(); 
    assertEquals("From: ShoppingList line: 346", 2, shoppinglist.etsi("*").size()); 
    shoppinglist.korvaaTaiLisaa(citymarket); 
    assertEquals("From: ShoppingList line: 348", 2, shoppinglist.etsi("*").size()); 
  } // Generated by ComTest END
}